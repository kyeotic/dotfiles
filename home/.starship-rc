eval "$(starship init zsh)"

# Homebrew
if [ "$(uname)" = "Darwin" ]; then
  # source the homebrew files, 
  echo "FNISH HOMEBREW CONFIG IN STARSHIP"
elif [ "$(expr substr $(uname -s) 1 5)" = "Linux" ]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

# History suggestions
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search
bindkey "^[[B" down-line-or-beginning-search

# Fix key bindings
bindkey "^[[H" beginning-of-line   # Home key
bindkey "^[[F" end-of-line         # End key
bindkey "^[[3~" delete-char        # Delete key

# History in cache directory:
HISTFILE="$HOME/.zsh_history"
HISTSIZE=500000
SAVEHIST=500000
setopt appendhistory
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY

# Auto
if [ ! -f "/etc/NIXOS" ]; then
  source $HOMEBREW_PREFIX/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# zsh-completions
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh-completions:$FPATH

  autoload -Uz compinit
  compinit -u
fi

# WSL-friendly SSH agent setup
if [ -z "$SSH_AUTH_SOCK" ] || [ ! -S "$SSH_AUTH_SOCK" ]; then
  # Kill any existing ssh-agent processes
  pkill ssh-agent 2>/dev/null
  
  # Create a fixed socket location
  export SSH_AUTH_SOCK=~/.ssh/agent.sock
  
  # Remove socket if it exists
  rm -f $SSH_AUTH_SOCK
  
  # Start a new agent with the fixed socket
  ssh-agent -a $SSH_AUTH_SOCK > /dev/null
  
  # Add keys
  find ~/.ssh -type f -not -name "*.pub" \
    -not -name "known_hosts" \
    -not -name "authorized_keys" \
    -not -name "config" \
    -exec grep -l "PRIVATE KEY" {} \; 2>/dev/null | while read key; do

      ssh-add "$key"  2>/dev/null
  done
fi