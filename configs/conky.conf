-- Conky, a system monitor https://github.com/brndnmtthws/conky
--
-- This configuration file is Lua code. You can write code in here, and it will
-- execute when Conky loads. You can use it to generate your own advanced
-- configurations.
--
-- Try this (remove the `--`):
--
-- print("Loading Conky config")
--
-- For more on Lua, see:
-- https://www.lua.org/pil/contents.html
--    alignment = 'top_left',
-- the final negative offset shrinks the height back down, since the first negative offset leaves the empty space reserved
-- ${voffset -95}

conky.config = {
    alignment = 'top_middle',
    gap_x = 5,
    gap_y = 5,
    xinerama_head = 1,
    background = false,
    border_width = 1,
    cpu_avg_samples = 2,
    default_color = 'white',
    default_outline_color = 'white',
    default_shade_color = 'white',
    double_buffer = true,
    draw_borders = false,
    draw_graph_borders = true,
    draw_outline = false,
    draw_shades = false,
    extra_newline = false,
    font = 'DejaVu Sans Mono:size=12',
    minimum_height = 5,
    minimum_width = 1420,
    net_avg_samples = 2,
    no_buffers = true,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    own_window = true,
    own_window_class = 'conky',
    own_window_type = 'panel',
    own_window_transparent = true,
    own_window_colour = '#000000',
    own_window_argb_visual = true,
    own_window_argb_value = 0,
    own_window_hints2 = 'below',
    own_window_hints = 'undecorated,sticky,skip_taskbar,skip_pager,below',
    show_graph_range = false,
    show_graph_scale = false,
    stippled_borders = 0,
    update_interval = 1.0,
    uppercase = false,
    use_spacer = 'none',
    use_xft = true,
    short_units = true,
}

conky.text = [[
${font :size=36}${time %-I:%M %p}${font}

${voffset -60}${offset 950}  ${color grey} RAM:$color $memperc%  ${color grey}  CPU: $color$cpu%   ${color grey}GPU: $color${texeci 2 nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits}%  ${color grey}vRAM: $color ${texeci 2 (USED=$(nvidia-smi --query-gpu=memory.used --format=csv,noheader,nounits);TOTAL=$(nvidia-smi --query-gpu=memory.total --format=csv,noheader,nounits); echo $((TOTAL/USED)))}%  
${offset 950}${font :size=10}  ${color grey}        ${mem} $color | ${color grey} ${memmax}                    $color ${texeci 2 cat /sys/class/thermal/thermal_zone0/temp | head -c 2}°C                        ${texeci 2 nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits}°C ${color grey}${texeci 2 nvidia-smi --query-gpu=memory.used --format=csv,noheader,nounits}

]]
